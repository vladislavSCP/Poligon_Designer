(()=>{"use strict";class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).innerHTML='\n      <style>\n        :host {\n          background:#333; display:flex; gap:20px; align-items:center;\n          padding:0 40px; box-sizing:border-box;z-index: 110;\n        }\n        button{\n          font:inherit; padding:6px 28px; cursor:pointer; border-radius:6px;\n          width:10vw;\n          font-size:1vw;\n        }\n          .save-button{\n          margin-left:60vw;}\n      </style>\n      <button id="create">Создать</button>\n      <button class=\'save-button\' id="save">Сохранить</button>\n      <button id="reset">Сбросить</button>\n    '}connectedCallback(){const t=document.querySelector("#buffer"),e=document.querySelector("#workspace");this.shadowRoot.getElementById("create").addEventListener("click",()=>t.generatePolygons()),this.shadowRoot.getElementById("save").addEventListener("click",()=>{localStorage.setItem("polygons",JSON.stringify({buffer:t.serialize(),workspace:e.serialize()})),alert("Сохранено!")}),this.shadowRoot.getElementById("reset").addEventListener("click",()=>{localStorage.removeItem("polygons"),t.clear(),e.clear()})}}function e(t=6,e=50){const s=[];for(let i=0;i<t;i++){const t=Math.random()*Math.PI*2,i=e*(.5+.5*Math.random()),n=100+i*Math.cos(t),o=100+i*Math.sin(t);s.push(`${n},${o}`)}return s.join(" ")}customElements.define("tool-bar",t);class s extends HTMLElement{constructor({points:t=e(),color:s="var(--accent)"}={}){super(),this.attachShadow({mode:"open"}).innerHTML=`\n      <svg viewBox="0 0 200 200" preserveAspectRatio="xMidYMid meet">\n        <polygon fill="${s}" points="${t}"></polygon>\n      </svg>\n    `,this.dataset.points=t,this.dataset.color=s,this.draggable=!0}static fromData(t){return new s(t)}}customElements.define("svg-polygon",s);class i extends HTMLElement{constructor(){super()}connectedCallback(){this.addEventListener("dragstart",this.#t.bind(this)),this.addEventListener("dragover",t=>t.preventDefault()),this.addEventListener("drop",this.#e.bind(this)),this.id&&localStorage.getItem("polygons")&&JSON.parse(localStorage.getItem("polygons"))[this.id]?.forEach(t=>{const e=s.fromData(t);e.style.position="absolute",e.style.left=t.left,e.style.top=t.top,this.appendChild(e)});const t=this.getAttribute("type");"buffer"===t&&this.generatePolygons(),"workspace"===t&&this.#s()}generatePolygons(){if("buffer"!==this.getAttribute("type"))return;this.clear();const t=5+Math.floor(16*Math.random());for(let e=0;e<t;e++)this.appendChild(new s)}serialize(){return[...this.querySelectorAll("svg-polygon")].map(t=>({points:t.dataset.points,color:t.dataset.color,left:t.style.left,top:t.style.top}))}clear(){this.querySelectorAll("svg-polygon").forEach(t=>t.remove())}#t(t){t.dataTransfer.setData("text/plain","polygon"),t.dataTransfer.setDragImage(t.target,0,0),i.#i=t.target}#e(t){if(i.#i){if("workspace"===this.getAttribute("type")){const e=this.getBoundingClientRect(),s=(t.clientX-e.left-this._offsetX)/this._scale,n=(t.clientY-e.top-this._offsetY)/this._scale,o=t=>Math.round(t/this._cell)*this._cell;Object.assign(i.#i.style,{position:"absolute",left:o(s)+"px",top:o(n)+"px"})}this.appendChild(i.#i)}}static#i=null;#s(){this._cell=50,this._scale=1,this._offsetX=0,this._offsetY=0;const t=this.parentElement,e=t.querySelector(".ruler-x"),s=t.querySelector(".ruler-y"),i=t=>{const e=window.devicePixelRatio||1;t.width=t.clientWidth*e,t.height=t.clientHeight*e,t.getContext("2d").scale(e,e)};i(e),i(s);const n=()=>this._cell*this._scale,o=()=>{const t=this.clientWidth,e=this.clientHeight,s=t-t*this._scale,i=e-e*this._scale;this._offsetX=Math.max(s,Math.min(0,this._offsetX)),this._offsetY=Math.max(i,Math.min(0,this._offsetY))},l=()=>{const t=e.getContext("2d"),s=e.clientWidth;t.clearRect(0,0,s,20),t.font="10px sans-serif",t.textAlign="center",t.fillStyle="#ccc",t.strokeStyle="#888";const i=n();let o=(i-this._offsetX%i)%i,l=Math.floor(this._offsetX/-i);for(;o<s;o+=i,l++)t.beginPath(),t.moveTo(o+.5,0),t.lineTo(o+.5,6),t.stroke(),t.fillText(l*this._cell,o,16)},a=()=>{const t=s.getContext("2d"),e=s.clientHeight;t.clearRect(0,0,40,e),t.font="10px sans-serif",t.textBaseline="middle",t.fillStyle="#ccc",t.strokeStyle="#888";const i=n();let o=(i-this._offsetY%i)%i,l=Math.floor(this._offsetY/-i);for(;o<e;o+=i,l++)t.beginPath(),t.moveTo(34,o+.5),t.lineTo(40,o+.5),t.stroke(),t.save(),t.translate(30,o),t.rotate(-Math.PI/2),t.fillText(l*this._cell,0,0),t.restore()},r=()=>{o(),this.style.transform=`translate(${this._offsetX}px,${this._offsetY}px) scale(${this._scale})`,this.style.transformOrigin="0 0",this.style.backgroundSize=`${this._cell}px ${this._cell}px`,l(),a()};this.style.backgroundImage="linear-gradient(#444 1px,transparent 1px),\n       linear-gradient(90deg,#444 1px,transparent 1px)",this.style.backgroundSize=`${this._cell}px ${this._cell}px`,this.style.position=this.style.position||"relative",r(),this.addEventListener("wheel",t=>{t.preventDefault();const e=t.deltaY>0?.9:1.1,s=this._scale;if(this._scale=Math.max(1,Math.min(3,this._scale*e)),1===this._scale)this._offsetX=this._offsetY=0;else{const e=this.getBoundingClientRect(),i=t.clientX-e.left,n=t.clientY-e.top;this._offsetX=i-(i-this._offsetX)*(this._scale/s),this._offsetY=n-(n-this._offsetY)*(this._scale/s)}r()});let c=!1,h=0,d=0;this.addEventListener("mousedown",t=>{1===t.buttons&&1!==this._scale&&(c=!0,h=t.clientX,d=t.clientY)}),window.addEventListener("mousemove",t=>{c&&(this._offsetX+=t.clientX-h,this._offsetY+=t.clientY-d,h=t.clientX,d=t.clientY,r())}),window.addEventListener("mouseup",()=>c=!1)}}customElements.define("poly-zone",i)})();